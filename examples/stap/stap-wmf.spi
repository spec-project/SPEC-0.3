% Wide mouthed frog protocol. 
% A -> S : {k}kas
% S -> B : {k}ksb
% A -> B : {d}k

A(datum,kas,c_ab,c_as) := 
  nu(kab).
  c_as<enc(kab,kas)>.
  c_ab<enc(datum,kab)> ;

S(kas,ksb,c_as,c_sb) := 
  c_as(x).
  case x of enc(y,kas) in
  c_sb<enc(y,ksb)> ;

B(ksb,c_ab,c_sb,accept) :=
  c_sb(x).
  case x of enc(y,ksb) in 
  c_ab(z).
  case z of enc(w,y) in
  accept<z>;

Inst(c_as,c_sb,c_ab,accept,datum) :=
  nu(kas,ksb).
  (A{datum,kas,c_ab,c_as} | S{kas,ksb,c_as,c_sb} | B{ksb,c_ab,c_sb,accept});

% Authentication
% If B accepts as 'good' a datum "datum" encrypted under key "kab" then this message has actually been sent by A
% nu(datum).stap(c_ab<?t>,accept<?t>,Inst{c_as,c_sb,c_ab,accept,datum});	--> Holds (+ 3s)
% Explanation: Only accept channel outputs the message with the format hash(t)
% nu(datum).stap(accept<?t>,c_ab<?t>,Inst{c_as,c_sb,c_ab,accept,datum});	--> Does not hold (+ 0s)

% Secrecy
% The environment should never learn the confidential datum (datum)
% nu(datum).stap(absurd,guard(datum),Inst{c_as,c_sb,c_ab,accept,datum} | guard(x));	--> Holds (+ 30s)



